{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fleming.eb\\\\source\\\\repos\\\\react-nextjs\\\\pages\\\\index.js\";\nimport { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/%D0%A0%D0%B0%D0%BD%D0%BE%D0%BA_%D0%BD%D0%B0_%D0%9C%D0%B0%D0%BD%D0%B3%D1%83%D0%BF%D1%96.jpg/1280px-%D0%A0%D0%B0%D0%BD%D0%BE%D0%BA_%D0%BD%D0%B0_%D0%9C%D0%B0%D0%BD%D0%B3%D1%83%D0%BF%D1%96.jpg\",\n  address: \"Some Address 5, 12345 Some City\",\n  description: \"This is a first meetup!\"\n}, {\n  id: \"m2\",\n  title: \"Second Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Arkaia_-_Girasoles_-BT-_04.jpg/1280px-Arkaia_-_Girasoles_-BT-_04.jpg\",\n  address: \"Some Address 10, 12345 Some City\",\n  description: \"This is the second meetup!\"\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n}\n/* export async function getServerSideProps(context) {\n//use for data that changes multiple times per second\n  const req = context.req;\n  const res = context.res;\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n  };\n} */\n\n\nexport async function getStaticProps() {\n  //securely connect to database, filesystem, etc...\n  //fetch data from an api or database, filesystem, etc...\n  const client = await MongoClient.connect('mongodb+srv://react-next-js:AM8KepnJiyM1XedK@cluster0.zqow5.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.data.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString() //description:meetup.description\n\n      }))\n    },\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/fleming.eb/source/repos/react-nextjs/pages/index.js"],"names":["useEffect","useState","MeetupList","MongoClient","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","data","map","meetup","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,SAASC,WAAT,QAA4B,SAA5B;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,wPAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,KAAK,EACH,gIAJJ;AAKEC,EAAAA,OAAO,EAAE,kCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AAEA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,6GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAIA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,IAAR,CAAaC,GAAb,CAAkBC,MAAD,KAAa;AACrClB,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KADuB;AAErCE,QAAAA,OAAO,EAAEgB,MAAM,CAAChB,OAFqB;AAGrCD,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KAHuB;AAIrCF,QAAAA,EAAE,EAAEmB,MAAM,CAACC,GAAP,CAAWC,QAAX,EAJiC,CAKrC;;AALqC,OAAb,CAAjB;AADJ,KADF;AAULC,IAAAA,UAAU,EAAE;AAVP,GAAP;AAYD;AAED,eAAejB,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nimport { MongoClient } from \"mongodb\";\n\nconst DUMMY_MEETUPS = [\n  {\n    id: \"m1\",\n    title: \"First Meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/%D0%A0%D0%B0%D0%BD%D0%BE%D0%BA_%D0%BD%D0%B0_%D0%9C%D0%B0%D0%BD%D0%B3%D1%83%D0%BF%D1%96.jpg/1280px-%D0%A0%D0%B0%D0%BD%D0%BE%D0%BA_%D0%BD%D0%B0_%D0%9C%D0%B0%D0%BD%D0%B3%D1%83%D0%BF%D1%96.jpg\",\n    address: \"Some Address 5, 12345 Some City\",\n    description: \"This is a first meetup!\",\n  },\n  {\n    id: \"m2\",\n    title: \"Second Meetup\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Arkaia_-_Girasoles_-BT-_04.jpg/1280px-Arkaia_-_Girasoles_-BT-_04.jpg\",\n    address: \"Some Address 10, 12345 Some City\",\n    description: \"This is the second meetup!\",\n  },\n];\n\nfunction HomePage(props) {\n  return <MeetupList meetups={props.meetups} />;\n}\n\n/* export async function getServerSideProps(context) {\n//use for data that changes multiple times per second\n  const req = context.req;\n  const res = context.res;\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS,\n    },\n  };\n} */\n\nexport async function getStaticProps() {\n  //securely connect to database, filesystem, etc...\n  //fetch data from an api or database, filesystem, etc...\n\n  const client = await MongoClient.connect('mongodb+srv://react-next-js:AM8KepnJiyM1XedK@cluster0.zqow5.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.data.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n        //description:meetup.description\n      })),\n    },\n    revalidate: 10,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}