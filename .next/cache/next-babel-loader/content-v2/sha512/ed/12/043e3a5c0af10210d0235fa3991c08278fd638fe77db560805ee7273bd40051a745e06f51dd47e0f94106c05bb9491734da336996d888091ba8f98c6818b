{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\fleming.eb\\\\source\\\\repos\\\\react-nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetupData.title,\n    address: props.meetupData.city,\n    image: props.meetupData.image,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://react-next-js:AM8KepnJiyM1XedK@cluster0.zqow5.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  //const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: \"Meetup Number 1\",\n        address: \"12345 Some Street, Some City\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Arkaia_-_Girasoles_-BT-_04.jpg/1280px-Arkaia_-_Girasoles_-BT-_04.jpg\",\n        description: \"This is the description for meetup number\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/fleming.eb/source/repos/react-nextjs/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","title","city","image","description","getStaticPaths","client","MongoClient","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","id","address"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE,IAF5B;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBG,KAH1B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMC,WAAW,CAACC,OAAZ,CAAoB,6GAApB,CAArB;AACA,QAAMC,EAAE,GAAGH,MAAM,CAACG,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAT,EAAAA,MAAM,CAACU,KAAP;AACA,SAAM;AACJC,IAAAA,QAAQ,EAAC,KADL;AAEJC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAI;AAC1BC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAV;AADmB,KAAJ,CAAlB;AAFF,GAAN;AAQD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAK5C;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,SAAO;AACLvB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACV4B,QAAAA,EAAE,EAAEN,QADM;AAEVrB,QAAAA,KAAK,EAAE,iBAFG;AAGV4B,QAAAA,OAAO,EAAE,8BAHC;AAIV1B,QAAAA,KAAK,EACH,gIALQ;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAeN,aAAf","sourcesContent":["import MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nfunction MeetupDetails(props) {\r\n  return (\r\n    <MeetupDetail\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.city}\r\n      image={props.meetupData.image}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n  const client = await MongoClient.connect('mongodb+srv://react-next-js:AM8KepnJiyM1XedK@cluster0.zqow5.mongodb.net/meetups?retryWrites=true&w=majority');\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n  return{\r\n    fallback:false,\r\n    paths:meetups.map(meetup =>({\r\n      params:{meetupId:meetup._id.toString()}\r\n    })),\r\n\r\n  };\r\n\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n\r\n\r\n\r\n  //const meetupId = context.params.meetupId;\r\n  console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: meetupId,\r\n        title: \"Meetup Number 1\",\r\n        address: \"12345 Some Street, Some City\",\r\n        image:\r\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f6/Arkaia_-_Girasoles_-BT-_04.jpg/1280px-Arkaia_-_Girasoles_-BT-_04.jpg\",\r\n        description: \"This is the description for meetup number\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}